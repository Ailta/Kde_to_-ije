<html lang="cs" style="max-height: 100vh; max-width: 100vw">
    <head style="flex: none">
        <%- include('partials/head'); %>
        <style>
            .map {
                height: 100%;
                width: 100%;
            }
        </style>
        <script src="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.15.1/build/ol.js"></script>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.15.1/css/ol.css">
    </head>
    <body style="display: flex; flex-direction: column; height: 100vh">
        <%- include('partials/header'); %>
        <div id="map" class="map"></div>
        <script type="text/javascript">
            var kralovehradeckyKrajExtent = ol.proj.transformExtent([15.3, 50.1, 16.5, 50.8], 'EPSG:4326', 'EPSG:3857');

            var map = new ol.Map({
                target: 'map',
                layers: [
                    new ol.layer.Tile({
                        source: new ol.source.XYZ({
                            url: 'https://api.maptiler.com/maps/streets/{z}/{x}/{y}.png?key=8YRNEfnZb0K6syftXksQ'
                        })
                    })
                ],
                view: new ol.View({
                    center: ol.proj.fromLonLat([15.48, 50.24]),
                    zoom: 9,
                    extent: kralovehradeckyKrajExtent,
                    minZoom: 8,
                    maxZoom: 18
                })
            });

            // Funkce pro omezení pohybu mapy
            function constrainView(event) {
                var view = event.map.getView();
                var center = view.getCenter();
                var currentExtent = view.calculateExtent(map.getSize());
                var boundingExtent = kralovehradeckyKrajExtent;

                if (!ol.extent.containsExtent(boundingExtent, currentExtent)) {
                    var newCenter = [
                        Math.max(Math.min(center[0], boundingExtent[2]), boundingExtent[0]),
                        Math.max(Math.min(center[1], boundingExtent[3]), boundingExtent[1])
                    ];
                    view.setCenter(newCenter);
                }
            }

            // Přidání posluchače událostí pro omezení pohybu
            map.on('moveend', constrainView);

            // Definice vlastního stylu pro body
            var pointStyle = new ol.style.Style({
                image: new ol.style.Circle({
                    radius: 7,
                    fill: new ol.style.Fill({
                        color: 'red'
                    }),
                    stroke: new ol.style.Stroke({
                        color: 'white',
                        width: 2
                    })
                })
            });

            // Funkce pro zpracování kliknutí na prvky
            function onFeatureClick(event) {
                var feature = map.forEachFeatureAtPixel(event.pixel, function(feature) {
                    return feature;
                });

                if (feature) {
                    alert("Klikli jste na: " + feature.get('name'));
                }
            }

            // Načtení GeoJSON dat s použitím vlastního stylu
            var geojsonLayer = new ol.layer.Vector({
                source: new ol.source.Vector({
                    url: 'https://services6.arcgis.com/ogJAiK65nXL1mXAW/arcgis/rest/services/Kina/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson',
                    format: new ol.format.GeoJSON()
                }),
                style: pointStyle
            });

            map.addLayer(geojsonLayer);

            // Přidání posluchače událostí pro kliknutí na mapu
            map.on('singleclick', onFeatureClick);
        </script>
    </body>
</html>